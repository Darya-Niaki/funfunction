plot(x = data2$dose[data2$supp == "OJ"], y = data2$len[data2$supp == "OJ"], xlab = "Dose",
ylab = "Length", main = "Length vs Dose for VC Supplement Type", pch = 17)
plot(x = data2$dose[data2$supp == "VC"], y = data2$len[data2$supp == "VC"], xlab = "Dose",
ylab = "Length", main = "Length vs Dose \n for VC Supplement Type", pch = 19)
plot(x = data2$dose[data2$supp == "OJ"], y = data2$len[data2$supp == "OJ"], xlab = "Dose",
ylab = "Length", main = "Length vs Dose \n for VC Supplement Type", pch = 17)
#change the parameters back to how it was
par(mfrow = c(1,1))
linearegression <- lm(len ~ supp + dose, data2)
summary(linearegression)
qqline(residuals1)
residuals1 <- resid(linearegression)
qqnorm(residuals1, pch = 19, col = "blue")
qqline(residuals1)
#Generating 100 random variables from an exponential distribution with lambda = 5.
exponentialdistribution <- rexp(100, 5)
#Plotting the empirical CDF of this data with informative axes labels, and a really long title.
plot(ecdf(exponentialdistribution), xlab = "X value", ylab = "F(x) value",
main = "Emperical (cumulative) density function \n of data drawn from a exponential distribution\n for R programming course \n programmer Darya")
#Plotting the empirical CDF of this data with informative axes labels, and a really long title.
plot(ecdf(exponentialdistribution), xlab = "X value", ylab = "F(x) value",
main = "Emperical (cumulative) density function \n of data drawn from a exponential distribution\n for R programming course")
#Plotting the empirical CDF of this data with informative axes labels, and a really long title.
plot(ecdf(exponentialdistribution), xlab = "X value", ylab = "F(x) value",
main = "Emperical (cumulative) density function \n of data drawn from a exponential distribution")
#Plotting the empirical CDF of this data with informative axes labels, and a really long title.
plot(ecdf(exponentialdistribution), xlab = "X value", ylab = "F(x) value",
main = "Emperical (cumulative) density function \n of data drawn from an exponential distribution")
plot(Darya_proportion,Darya_year)
lines(Darya_proportion,Darya_year,col="lightgreen")
tinytex::install_tinytex()
work<-data("mtcars")
View(work)
View("work")
work2 <- data("mtcars")
data("mtcars")
View("mtcars")
data("mtcars")
View("mtcars")
cities <- data.frame(name = rep(c("richmond", "norfolk", "charlottesville")), pop2009 = c(1202494,236071,191515), pop2010 = c(1235565,242143,197279), pop2011 = c(1248271,241943,199675), pop2012 = c(1260202,243056,210909))
cities
library(tidyr)
cities_long <- pivot_longer(cities,cols = c(pop2009,pop2010))
rlang::last_error()
rlang::last_trace()
cities_long <- pivot_longer(cities,cols = pop2010)
cities_long <- pivot_longer(cities,cols = "pop2010")
rlang::last_error()
rlang::last_trace()
cities_long <- pivot_longer(cities)
?pivot_longer
cities %>% pivot_longer(values_to = "pop")
cities %>% pivot_longer(!name,values_to = "pop")
rlang::last_error()
rlang::last_trace()
View(cities)
city <- cities %>% pivot_longer(!name)
cities %>% pivot_longer(cols= c('pop2009' , "pop2010", "pop2011","pop2012"),namesvalues_to = "pop")
cities %>% pivot_longer(cols= c('pop2009' , "pop2010", "pop2011","pop2012"),names_to = "pop_year",values_to = "pop")
cities %>% pivot_longer(cols= c('pop2009' , "pop2010", "pop2011","pop2012"),names_to = "pop_year",values_to = "pop") %>% group_by("name") %>% summarize()
cities$name
city <- cities %>% group_by("name")
city
cities
long_city <- cities %>% pivot_longer(cols= c('pop2009' , "pop2010", "pop2011","pop2012"),names_to = "pop_year",values_to = "pop")
summercity<- long_city %>% group_by("name") %>% summarize (ration = max(pop)/min(pop))
summercity
summercity<- long_city %>% group_by(name) %>% summarize (ration = max(pop)/min(pop))
summercity
summercity %>% arrange(desc(ration))
cities
new_city <- cities %>% pivot_longer(cols = !"name")
new_city <- cities %>% pivot_longer(cols = c("pop2009","pop2010","pop2011","pop2012"), names_to = "year", values_to = "pop") %>% group_by(name) %>% summarize_(ratio = max(pop)/min(pop)) %>% arrange(desc(ratio))
new_city <- cities %>% pivot_longer(cols = c("pop2009","pop2010","pop2011","pop2012"), names_to = "year", values_to = "pop") %>% group_by(name) %>% summarize_(ratio = max(pop)/min(pop)) %>% arrange(desc(ratio))
new_city <- cities %>% pivot_longer(cols = c("pop2009","pop2010","pop2011","pop2012"), names_to = "year", values_to = "pop")
View(new_city)
new_city <- cities %>% pivot_longer(cols = c("pop2009","pop2010","pop2011","pop2012"), names_to = "year", values_to = "pop") %>% group_by(name) %>% summarize(ratio = max(pop)/min(pop)) %>% arrange(desc(ratio))
installed.packages()
packages <- installed.packages()
packages$Package
?installed.packages
str(ip <- installed.packages())
ip[,c(1,2)]
ip[,1]
pack_name <- ip[,1]
str(pack_name)
as.character(pack_name)
packname[2]
pack_name[2]
?split
strsplit("darya")
strsplit("darya", "")
strsplit(pack_name,"")
count("a",pack_name)
unlist(strsplit(pack_name,""))
char_split <- unlist(strsplit(pack_name,""))
uniq(char_split)
unique(char_split)
char_freq <- as.data.frame(table(char_split))
char_freq
?table
tib <- c('cat','dog','cat')
table(tib)
library(ggplot2)
char_freq %>% ggplot(aes(x = Freq, y = char_split, color = char_split)) + geom_bar()
rlang::last_error()
rlang::last_trace()
ggplot(char_freq, aes(x = Freq, y = char_split, color = char_split)) + geom_bar()
ggplot(char_freq, aes(x = Freq, y = char_split, color = char_split)) + geom_bar(stat = "identity")
ggp +  coord_flip()
ggp <- ggplot(char_freq, aes(x = Freq, y = char_split, color = char_split)) + geom_bar(stat = "identity")
ggp +  coord_flip()
ggp <- ggplot(char_freq, aes(y = Freq, x = char_split, color = char_split)) + geom_bar(stat = "identity")
ggp +  coord_flip()
ggp <- ggplot(char_freq, aes(y = Freq, x = reorder(char_split), color = char_split)) + geom_bar(stat = "identity")
ggp +  coord_flip()
ggp
ggp <- ggplot(char_freq, aes(y = Freq, x = reorder(char_split, -Freq), color = char_split)) + geom_bar(stat = "identity")
ggp +  coord_flip()
ggp <- ggplot(char_freq, aes(y = Freq, x = reorder(char_split, Freq), color = char_split)) + geom_bar(stat = "identity")
ggp +  coord_flip()
ggp <- ggplot(char_freq, aes(y = Freq, x = reorder(char_split, Freq), color = char_split), show.legend = FALSE) + geom_bar(stat = "identity")
ggp +  coord_flip()
ggp
ggp <- ggplot(char_freq, aes(y = Freq, x = reorder(char_split, Freq), color = char_split), show.legend = TRUE) + geom_bar(stat = "identity")
ggp +  coord_flip()
ggplot(char_freq, aes(y = Freq, x = reorder(char_split, Freq), color = char_split), show.legend = FLASE) + geom_bar(stat = "identity")
ggplot(char_freq, aes(y = Freq, x = reorder(char_split, Freq), color = char_split), show.legend = FLASE) + geom_bar(stat = "identity")+theme(legend.position = "none")
getwd()
list.files()
birth <- read.csv("US_birth.csv")
View(birth)
bar_birth <-ggplot(birth, aes(x = date_of_month, y = reorder(birth,date_of_month) color = date_of_month), show.legend = FLASE) + geom_bar(stat = "identity")
bar_birth <- ggplot(birth, aes(x = date_of_month, y = reorder(birth,date_of_month) color = date_of_month)) + geom_bar(stat = "identity")
ggplot(birth, aes(x = date_of_month, y = reorder(birth,date_of_month) color = date_of_month)) + geom_bar(stat = "identity")
bar_birth <- ggplot(birth, aes(x = date_of_month, y = reorder(birth,date_of_month), color = date_of_month)) + geom_bar(stat = "identity")
bar_birth
bar_birth
ggplot(birth, aes(x = date_of_month, y = date_of_month, color = date_of_month)) + geom_bar(stat = "identity")
ggplot(birth, aes(x = date_of_month, y = birth, color = date_of_month)) + geom_bar(stat = "identity")
rlang::last_error()
rlang::last_trace()
ggplot(birth, aes(x = date_of_month, y = births, color = date_of_month)) + geom_bar(stat = "identity")
ggplot(birth, aes(x = date_of_month, y = reorder(births,date_of_month), color = date_of_month)) + geom_bar(stat = "identity")
ggplot(birth, aes(x = date_of_month, y = births, color = date_of_month)) + geom_bar(stat = "identity")
ggplot(birth, aes(x = reorder(date_of_month,births), y = births, color = date_of_month)) + geom_bar(stat = "identity")
ggp +  coord_flip()
ggplot(birth, aes(x = reorder(date_of_month,-births), y = births, color = date_of_month)) + geom_bar(stat = "identity")
ggplot(birth, aes(x = reorder(date_of_month,+births), y = births, color = date_of_month)) + geom_bar(stat = "identity")
birth %>% filter(date_of_month, births) %>% ggplot(aes(x = reorder(date_of_month,+births), y = births, color = date_of_month)) + geom_bar(stat = "identity")
birth %>% select(date_of_month, births) %>% ggplot(aes(x = reorder(date_of_month,+births), y = births, color = date_of_month)) + geom_bar(stat = "identity")
plot <- birth %>% select(date_of_month, births) %>% ggplot(aes(x = reorder(date_of_month,+births), y = births, color = date_of_month)) + geom_bar(stat = "identity")
plot
plot <- birth %>% select(date_of_month, births)
View(plot)
ggplot(plot, aes(x = reorder(date_of_month,+births), y = births, color = date_of_month)) + geom_bar(stat = "identity")
ggp +  coord_flip()
plotss <- birth %>% select(date_of_month, births)
ggplot(plotss, aes(x = reorder(date_of_month,+births), y = births, color = date_of_month)) + geom_bar(stat = "identity")
barplot(plotss$date_of_month,plotss$births)
barplot(plotss$date_of_month,plotss$births)
ggplot(plotss, aes(x = reorder(date_of_month,+births), y = births, color = date_of_month)) + geom_bar(stat = "identity")
ggplot(plotss, aes(x = date_of_month, y = births, color = date_of_month)) + geom_bar(stat = "identity")
gg<-ggplot(plotss, aes(x = reorder(date_of_month,+births), y = births, color = date_of_month)) + geom_bar(stat = "identity")
gg +  coord_flip()
gg<-ggplot(plotss, aes(x = reorder(day_of_week,+births), y = births, color = day_of_week)) + geom_bar(stat = "identity")
gg
gg<-ggplot(plotss, aes(x =day_of_week, y = births, color = day_of_week)) + geom_bar(stat = "identity")
gg
gg<-ggplot(birth, aes(x =day_of_week, y = births, color = day_of_week)) + geom_bar(stat = "identity")
gg
ggplot(birth, aes(x = reorder(day_of_week,+births), y = births, color = day_of_week)) + geom_bar(stat = "identity")
ggplot(birth, aes(x = year, y = births ))+ geom_smooth()
ggplot(birth, aes(x = year, y = births ))+ geom_smooth(method = "lm")
ggplot(birth, aes(x = year, y = births ))+ geom_point()
ggplot(birth, aes(x = reorder(day_of_week,+births), y = births, color = day_of_week)) + geom_bar(stat = "identity")
month <- birth %>% group_by(month) %>% summarize(sum(births))
View(month)
scatter <- ggplot(month, aes(x = month, y = "sum(birth)"),color = month) + geom_point() + geom_smooth()
scatter
scatter <- ggplot(month, aes(x = month, y = "sum(birth)"),color = month) + geom_point() + geom_smooth("lm")
ggplot(birth, aes(x = reorder(month, +births), y = births, color = day_of_week)) + geom_bar(stat = "identity")
scatter <- ggplot(month, aes(x = month, y = "sum(birth)"),color = month) + geom_point()
scatter
scatter <- ggplot(month, aes(x = month, y = "sum(birth)"),color = month) + geom_point()+scale_y_continuous(limits=c(3000000,3600000), breaks=seq(3000000,3600000,30))
scatter
dmonth <- birth %>% group_by(date_of_month) %>% summarize(sum(births))
ggplot(dmonth, aes(x = date_of_month, y = "sum(birth)"),color = month) + geom_point()
dmonth$`sum(births)`
ggplot(dmonth, aes(x = date_of_month, y = `sum(births)`),color = month) + geom_point()
ggplot(dmonth, aes(x = date_of_month, y = `sum(births)`),color = month) + geom_point()+geom_smooth()
ggplot(dmonth, aes(x = date_of_month, y = `sum(births)`),color = month) + geom_boxplot()
ggplot(dmonth, aes(x = date_of_month, y = `sum(births)`),color = month) + geom_point()+geom_smooth()
ggplot(dmonth, aes(x = date_of_month, y = `sum(births)`),color = date_of_month) + geom_point()+geom_smooth()
ggplot(dmonth, aes(x = date_of_month, y = `sum(births)`,color = date_of_month) + geom_point()+geom_smooth()
)
ggplot(dmonth, aes(x = date_of_month, y = `sum(births)`,color = date_of_month)) + geom_point()+geom_smooth()
library(xlsx)
data("mtcars")
list.files()
write.xlsx(mtcars, "C:/Users/shokouhinid/Documents/empyt_mtcars.xlsx")
library(openxlsx)
write.xlsx(mtcars, "C:/Users/shokouhinid/Documents/empyt_mtcars.xlsx")
library(dplyr)
starwars
cities <- data.frame(name = rep(c("richmond", "norfolk", "charlottesville")), pop2009 = c(1202494,236071,191515), pop2010 = c(1235565,242143,197279), pop2011 = c(1248271,241943,199675), pop2012 = c(1260202,243056,210909))
new_city <- cities %>% pivot_longer(cols = c("pop2009","pop2010","pop2011","pop2012"), names_to = "year", values_to = "pop") %>% group_by(name) %>% summarize(ratio = max(pop)/min(pop)) %>% arrange(desc(ratio))
library(tidyr)
new_city <- cities %>% pivot_longer(cols = c("pop2009","pop2010","pop2011","pop2012"), names_to = "year", values_to = "pop") %>% group_by(name) %>% summarize(ratio = max(pop)/min(pop)) %>% arrange(desc(ratio))
?installed.packages
str(ip <- installed.packages(.Library)
)
packages <- unlist(str(ip <- installed.packages(.Library)))
strsplit(packages)
strsplit(packages, "")
packages
pack_name <- unlist(str(ip <- installed.packages(.Library)))
pack_name
str(ip <- installed.packages(.Library, priority = "high"))
str(ip <- installed.packages(.Library))
ip[, 1]
packname <- ip[, 1]
packname <- unlist(packname)
strsplit(packname,"")
as.data.frame(table(pack_name))
as.data.frame(table(unlist(strsplit(packname,""))))
birth <- read.csv("US_birth.csv")
dateOfMonth <- ggplot(birth, aes(x = reorder(day_of_week,+births), y = births, color = day_of_week)) + geom_bar(stat = "identity")
library(ggplot2)
dateOfMonth <- ggplot(birth, aes(x = reorder(day_of_week,+births), y = births, color = day_of_week)) + geom_bar(stat = "identity")
dateOfMonth
dayOfWeek <- ggplot(birth, aes(x = reorder(day_of_week,+births), y = births, color = day_of_week)) + geom_bar(stat = "identity")
dayOfWeek
getwd()
ggplot(birth, aes(x = year, y = births ))+ geom_smooth()+ geom_point()
birth %>% group_by(year) %>% summarize(sum(birth))
total_birth <- birth %>% group_by(year) %>% summarize(sum(birth))
ggplot(total_birth, aes(x = year, y = `sum(birth)` ))+ geom_smooth()+ geom_point()+geaom_line()
total_birth <- birth %>% group_by(year) %>% summarize(sum(birth))
ggplot(total_birth, aes(x = year, y = `sum(birth)` ))+ geom_smooth()+ geom_point()+geaom_line()
ggplot(total_birth, aes(x = year, y = `sum(birth)` ))+ geom_smooth()+ geom_point()+geoom_line()
ggplot(total_birth, aes(x = year, y = `sum(birth)` ))+ geom_smooth()+ geom_point()+geom_line()
total_birth
total_birth <- birth %>% group_by(year) %>% summarize(sum(births))
total_birth
ggplot(total_birth, aes(x = year, y = `sum(birth)` ))+ geom_smooth()+ geom_point()+geom_line()
ggplot(total_birth, aes(x = year, y = `sum(births)` ))+ geom_smooth()+ geom_point()+geom_line()
totalWeek <- birth %>% group_by(day_of_week) %>% summarize(sum(births))
totalWeek
knitr::opts_chunk$set(echo = TRUE)
ggplot(totalWeek, aes(x = date_of_month, y = `sum(births)`,color = date_of_month)) + geom_point()+geom_smooth()
#calculate total number of birth for each day of week
totalWeek <- birth %>% group_by(day_of_week) %>% summarize(sum(births))
ggplot(totalWeek, aes(x = date_of_month, y = `sum(births)`,color = date_of_month)) + geom_point()+geom_smooth()
ggplot(totalWeek, aes(x = day_of_week, y = `sum(births)`,color = date_of_month)) + geom_point()+geom_smooth()
ggplot(totalWeek, aes(x = date_of_month, y = `sum(births)`,color = date_of_month)) + geom_point()+geom_smooth()
ggplot(totalWeek, aes(x = day_of_week, y = `sum(births)`,color = day_of_week)) + geom_point()+geom_smooth()
ggplot(totalWeek, aes(x = day_of_week, y = `sum(births)`,color = day_of_week)) + geom_point()+geom_smooth()
ggplot(totalMonth, aes(x = month, y = `sum(births)`,fill = month,)) + geom_boxplot()
totalMonth <- birth %>% group_by(month) %>% summarize(sum(births))
ggplot(totalMonth, aes(x = month, y = `sum(births)`,fill = month,)) + geom_boxplot()
ggplot(totalMonth, aes(x = month, y = `sum(births)`,color = month)) + geom_boxplot()
ggplot(totalMonth, aes(x = month, y = `sum(births)`,color = month)) + geom_boxplot()
?filter
birth %>% group_by(month)
monthly <- birth %>% group_by(month)
View(monthly)
#make berplots of least and most popular
ggplot(totalWeek, aes(x = reorder(day_of_week, births), y = `sum(births)`,color = day_of_week))+ geom_bar(stat = "identity")
#calculate total number of birth for each day of week
totalWeek <- birth %>% group_by(day_of_week) %>% summarize(sum(births))
totalWeek
#make berplots of least and most popular
ggplot(totalWeek, aes(x = reorder(day_of_week, births), y = `sum(births)`,color = day_of_week))+ geom_bar(stat = "identity")
#make berplots of least and most popular
ggplot(totalWeek, aes(x = reorder(day_of_week, `sum(births)`), y = `sum(births)`,color = day_of_week))+ geom_bar(stat = "identity")
ggplot(totalWeek, aes(x = reorder(day_of_week, `sum(births)`), y = `sum(births)`,fill = day_of_week))+ geom_bar(stat = "identity")
getwd()
read_csv("C:\\Users\shokouhinid\Desktop\biotatistical computing\R, Dozmorov\datasets\food.csv")
setwd("C:\\Users\shokouhinid\Desktop\biotatistical computing\R, Dozmorov\datasets")
getwd()
list.files()
data <- read.csv("C:/Users/shokouhinid/Documents/US_birth_new.csv")
data <- read.csv("C:/Users/shokouhinid/Documents/US_births_new.csv")
datanew <- read.csv("C:/Users/shokouhinid/Documents/US_births_new.csv")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
totalMonth <- birth %>% group_by(month) %>% summarize(sum(births))
library(dplyr)
totalMonth <- datanewh %>% group_by(month) %>% summarize(sum(births))
totalMonth <- datanew %>% group_by(month) %>% summarize(sum(births))
totalMonth
totalMonth
totalDayOfMonth <- datanew %>% group_by(date_of_month) %>% summarize(sum(births))
ggplot(totalDayOfMonth, aes(x = reorder(date_of_month, -`sum(births)`), y = `sum(births)`,fill = date_of_month))+ geom_line()
ggplot(totalDayOfMonth, aes(x = reorder(date_of_month, -`sum(births)`), y = `sum(births)`,fill = date_of_month))+ geom_line()
totalDayOfMonth
ggplot(totalDayOfMonth, aes(x = date_of_month, y = `sum(births)`,fill = date_of_month))+ geom_line()
daymonth <- datanew %>% group_by(month) %>% group_by(date_of_month) %>% summarize(sum(births))
daymonth
daymonth <- datanew %>% group_by(month)
daymonth
View(daymonth)
daymonth <- datanew %>% filter(month ==1 & date_of_month == 1)
sum(daymonth$birth)
daymonth2 <- datanew %>% group_by(month, date_of_month)
daymonth2
View(daymonth2)
daymonth2 <- datanew %>% group_by(date_of_month,month)
table(daymonth2)
daymonth2 <- datanew %>% group_by(date_of_month)
daymonth3 <- datanew %>% group_by(date_of_month)
View(daymonth3)
daymonth3 <- birth %>% group_by(date_of_month)
View(daymonth3)
birth %>% group_by(date_of_month)
birth %>% group_by(day_of_week)
day_ <- birth %>% group_by(day_of_week)
View(day_)
getwd()
list.files()
read.csv("C:/Users/shokouhinid/Documents/US_birth_new.csv")
read.csv("C:/Users/shokouhinid/Documents/US_births_new.csv")
data2 <- read.csv("C:/Users/shokouhinid/Documents/US_births_new.csv")
View(data2)
library(dplyr)
library(ggplot2)
groupdata <- data2 %>% group_by(month,date_of_month) %>% summarize(sum(births))
groupdata
View(groupdata)
ggplot(groupdata, aes(X = month, y = `sum(birth)`)) + geom_line()
ggplot(groupdata, aes(X = month, y = `sum(births)`)) + geom_line()
ggplot(groupdata, aes(x = month, y = `sum(births)`)) + geom_line()
ggplot(groupdata, aes(x = date_of_month, y = `sum(births)`)) + geom_line()
ggplot(groupdata, aes(x = date_of_month, y = `sum(births)`)) + geom_line() + geom_point()
ggplot(groupdata, aes(x = c(date_of_month,month), y = `sum(births)`)) + geom_line() + geom_point()
groupdata <- data2 %>% group_by(month,date_of_month) %>% summarize(sum(births),n)
ggplot(groupdata, aes(y = `sum(births)`)) + geom_point()
table(groupdata$month)
table(groupdata$dat_of_month)
table(groupdata$date_of_month)
monkeys <- read.csv("C:/Users/shokouhinid/Desktop/analysis of biomedical data/home work/hw5/monkeys.csv")
View(monkeys)
monkeys %>% group_by(Group) %>% summarise(size = n(), mu = mean(Response), sd= sd(Response),
low= quantile(Response,0.025), top = quantile(Response,0.925),
median = median(Response), min= min(Response),max= max(Response))
library(readr)
library(dplyr)
monkeys %>% group_by(Group) %>% summarise(size = n(), mu = mean(Response), sd= sd(Response),
low= quantile(Response,0.025), top = quantile(Response,0.925),
median = median(Response), min= min(Response),max= max(Response))
monkeys$rhIGF_I <- ifelse(monkeys$Group == 'rhIGF-I' | monkeys$Group == 'rhIGF+rhGH',
monkeys$ rhIGF_I <- 1, monkeys$rhIGF_I <- 0)
monkeys$rhGH <- ifelse(monkeys$Group == 'rhGH' | monkeys$Group == 'rhIGF+rhGH'
, monkeys$rhGH <- 1, monkeys$rhGH <- 0)
anova1 <- aov(Response~rhGH*rhIGF_I ,data=monkeys)
summary(anova1)
anova2 <- aov(Response~rhGH+rhIGF_I ,data=monkeys)
summary(anova2)
mydata = read.csv(file = "C:/Users/shokouhinid/Desktop/analysis of biomedical data/home work/hw5/gp.csv", header = TRUE)
model1 = lm(RATIO ~ Group, data = mydata)
anova(model1)
TukeyHSD(aov(model1))
sresids = rstandard(model1
mydata = read.csv(file = "C:/Users/shokouhinid/Downloads/HITS_Example.csv", header = TRUE)
mydata$HIP.f   = as.factor(mydata$History.of.IPV)
model1 = lm(HITS_Score ~ Group.f, data = mydata)
mydata$Group = ifelse(mydata$History.of.IPV == 0 & mydata$Substance.Use == 0, 1,
ifelse(mydata$History.of.IPV == 0 & mydata$Substance.Use == 1, 2,
ifelse(mydata$History.of.IPV == 1 & mydata$Substance.Use == 0, 3,4)))
mydata$Group = ifelse(mydata$History.of.IPV == 0 & mydata$Substance.Use == 0, 1,
ifelse(mydata$History.of.IPV == 0 & mydata$Substance.Use == 1, 2,
ifelse(mydata$History.of.IPV == 1 & mydata$Substance.Use == 0, 3,4)))
mydata = read.csv(file = "C:/Users/shokouhinid/Downloads/HITS_Example.csv", header = TRUE)
head(mydata)
mydata$Group = ifelse(mydata$History.of.IPV == 0 & mydata$Substance.Use == 0, 1,
ifelse(mydata$History.of.IPV == 0 & mydata$Substance.Use == 1, 2,
ifelse(mydata$History.of.IPV == 1 & mydata$Substance.Use == 0, 3,4)))
mydata$HIP.f   = as.factor(mydata$History.of.IPV)
mydata$SU.f    = as.factor(mydata$Substance.Use)
mydata$Group.f = as.factor(mydata$Group)
options(contrasts = c("contr.sum", "contr.poly"))
model1 = lm(HITS_Score ~ Group.f, data = mydata)
anova(model1)
Anova(model1, type = "3")
anova(model1, type = "3")
model2 = lm(HITS_Score ~ HIP.f + SU.f + HIP.f*SU.f, data = mydata)
summary(model2)
hypotenuse <- function(sideA,sideB){
sideC = sqrt(sideA^2 + sideB^2)
return(sideC)
}
hypotenuse(3,4)
hypotenuse(3)
vector = c(1,2,3,4,5,6,7,8)
library(dplyr)
vector <- vector[!in(vector) ]
vector <- vector[!min(vector) ]
vector
vector = c(1,2,3,4,5,6,7,8)
vector
min(vector)
vector1 <- vector[!(min(vector)) ]
vector1
vector1 <- vector[!vector == min(vector) ]
vector1
mindel = 3
for (i in mindel){}
for (i in mindel){
vector = vector[!vector == min(vector)]
}
vector
for (i in mindel){
i}
vector = vector[!vector == max(vector)]
vector
treamed <- function(x,s,l){
for (minnum in s){
x <- x[! x == min(x)]
}
for (maxnum in l){
x <- x[! x == min(x)]
}
return(x)
}
treamed(x = c(1,2,3,4,5,6,7,8,9),s = 1, l = 2)
treamed <- function(x,s,l){
for (minnum in s){
x <- x[! x == min(x)]
}
for (maxnum in l){
x <- x[! x == max(x)]
}
return(x)
}
treamed(x = c(1,2,3,4,5,6,7,8,9),s = 1, l = 2)
treamed(x = c(1,2,3,4,5,6,7,8,9),s = 3, l = 2)
treamed <- function(x,s,l){
for (minnum in 1:s){
x <- x[! x == min(x)]
}
for (maxnum in 1:l){
x <- x[! x == max(x)]
}
return(x)
}
treamed(x = c(1,2,3,4,5,6,7,8,9),s = 3, l = 2)
install.packages("Funfunction")
library(Funfunction)
install.packages("Rtools")
install.packages("Funfunction")
library(Rtools)
library("Rtools")
install.packages("Funfunction")
install.packages("Funfunction")
library("Rtools")
getwd()
setwd("C:/Users/shokouhinid/Desktop/biotatistical computing/R, Dozmorov/package/funfunction2")
library(funfunction2)
getwd()
library(funfunction2)
library(funfunction2)
library(funfunction2)
?funfunction2
help(package = "funfunction2")
detach("package:funfunction2", unload = TRUE)
install.packages("C:/Users/shokouhinid/Desktop/biotatistical computing/R, Dozmorov/package/funfunction2_0.1.0.tar.gz", repos = NULL, type = "source")
help(package = "funfunction2")
devtools::install_github()
library(devtools)
build_readme()
build_readme()
library(funfunction2)
library(funfunction2)
library(funfunction2)
? funfunction2
help(package = "funfunction2")
#' The second function will calculate the mean of a numeric vector, ignoring the s smallest value and l largest values.
Trimmed_mean <- function(x,s,l){
for (item in 1:s){
x <- x[!x == min(x)]
}
for ( item2 in 1:l){
x <- x[!x == max(x)]
}
MeanX <- mean(x)
return(MeanX)
}
library(funfunction2)
library(funfunction2)
library(funfunction2)
detach("package:funfunction2", unload = TRUE)
remove.packages("funfunction2")
library(devtools)
install_github('Darya-Niaki/funfunction2')
remove.packages("funfunction2")
install_github('Darya-Niaki/funfunction2',build_vignettes = TRUE)
library(funfunction2)
remove.packages("funfunction2")
install_github('Darya-Niaki/funfunction2',build_vignettes = TRUE)
devtools::install_github('Darya-Niaki/funfunction2', build_vignettes = TRUE)
library(funfunction2)
rightTriangle(13,7,.)
rightTriangle(13,7,'.')
rightTriangle(13,7,NA)
rightTriangle(Na,7,12)
rightTriangle(NA,7,12)
library(funfunction2)
remove.packages("funfunction2")
library(funfunction2)
install.packages('funfunction2')
install.packages("funfunction2")
